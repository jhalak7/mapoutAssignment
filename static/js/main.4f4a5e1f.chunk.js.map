{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","splash","setSplash","profile","setProfile","location","setLocation","items","setItems","menus","setMenus","fetched","setFetched","start","setStart","end","setEnd","enableSearch","setEnableSearch","useEffect","setTimeout","countries","Country","getAllCountries","map","country","label","name","value","id","searchClicked","a","axios","get","result","console","log","data","jobs","filter","job","slice","error","className","type","color","height","width","onClick","style","display","alignItems","justifyContent","onChange","e","target","length","inputChange","disabled","background","viewBox","class","points","item","title","experience","industry","href","apply_link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f4a5e1f.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState,useEffect } from \"react\";\nimport { Country }  from 'country-state-city';\nimport Loader from \"react-loader-spinner\";\nimport axios from 'axios';\nimport cib_indeed from './resources/cib_indeed.png'\n\nfunction App() {\n  const [splash, setSplash] = useState('splashEnable');\n  const [profile, setProfile] = useState('');\n  const [location, setLocation] = useState('');\n  const [items,setItems] = useState([]);\n  let [menus, setMenus] = useState(false);\n  let [fetched,setFetched]=useState(true);\n  let [start, setStart] = useState(0);\n  let [end,setEnd]=useState(3);\n  let [enableSearch,setEnableSearch]=useState(false)\nvar menuChange=()=>{\n  setMenus(!menus);\n}\n\n  useEffect(()=>{\n    setTimeout(() => {\n      setSplash('splashDisable')\n    }, 3000);\n \n  })\n  \nconst countries=Country.getAllCountries().map((country) => ({\n    label: country.name,\n    value: country.id,\n    ...country \n  }))\n  var next=()=>{\n    setFetched(false);\n    setEnd(end+3)\n    setStart(start+3)\n    searchClicked()\n  }\n  var prev=()=>{\n    setFetched(false);\n    setEnd(end-3)\n    setStart(start-3)\n    searchClicked()\n  }\n\n  \n  var searchClicked=async()=>{setFetched(false);\n    try {\n      const result = await axios.get(\"https://staging.mapout.com/mapout-node/joblist/monster-jobs?keyword=\"+profile+\"&location=\"+location);\n      console.log(result)\n      setItems(result.data.jobs.filter((job)=>job!==null).slice(start,end))\n      \n  } catch (err) {\n      console.error(err);\n  }\n  setFetched(true);\n  }\n\n  var inputChange=(e)=>{\n    setEnableSearch(false);\n    if(e.target.value.length>0) \n    setEnableSearch(true);\n    setProfile(e.target.value)\n  }\n\n  return (\n    <div>\n    <div className={splash}>\n      <h1>Mapout</h1>\n      <div className=\"loadMain\">\n      <div className=\"load\"></div>\n      </div>\n    </div>\n    {!fetched && <div className=\"loader\"> <Loader\n        type=\"ThreeDots\"\n        color=\"black\"\n        height={100}\n        width={100}\n      /></div>}\n      <div className=\"nav\">\n      \n      <div className={menus?'menuDivActive':'menuDiv'}>\n        \n      <h6 className=\"menu\" onClick={menuChange}>{!menus?'Menu':'Close'}</h6>\n      {/* {menus && <img src={cib_indeed}></img>} */}\n        </div>\n        </div>\n\n    <div className=\"mainDiv\">\n      <div style={{display:\"flex\",alignItems:\"baseline\",justifyContent: \"space-evenly\",width:\"100%\"}}>\n      <div style={{display:\"flex\",alignItems:\"center\"}}>\n      <p>Keyword:</p> \n      <input type=\"text\" onChange={e => inputChange(e)}></input>\n      </div>\n      <div style={{width:\"200px\",display:\"flex\",alignItems:\"center\"}}>\n        \n      <p>Location:</p>\n     \n        <select onChange={(e) => {\n            setLocation(e.target.value)\n          }}>\n          {countries.map((country)=>(\n            \n            <option value={country.label} key={country.label}>{country.label}</option>\n          ))}\n        </select>\n        </div>\n        \n      <button disabled={!enableSearch} style={{background:enableSearch?\"#e4d4cc\":\"#bc9987\"}} onClick={searchClicked}>Search</button>\n      </div>\n      \n    <div className=\"cards\">  \n    {fetched && start>0 && <div className=\"next\"> \n    <svg onClick={prev} width=\"24\" height=\"24\" viewBox=\"0 0 63.9 122.88\"><g><polygon class=\"st0\" points=\"0,61.44 63.9,122.88 63.9,0 0,61.44\"/></g></svg>\n    </div>}\n    {items && fetched && items.map((item)=>{\n      if(fetched && items.length>0)\n          return <div className=\"card\" key={item.title}>\n            <p>Title: {item.title}</p>\n            <p>Experience Required: {item.experience}</p>\n            <p>Location: {item.location}</p>\n            <p>Industry: {item.industry}</p>\n            <a href={item.apply_link}>Apply here</a>\n          </div>\n          })} \n          {fetched && items.length>0 && <div className=\"next\">\n        <svg onClick={next} width=\"24\" height=\"24\" viewBox=\"0 0 63.9 122.88\"><g><polygon class=\"st0\" points=\"63.9,61.44 0,122.88 0,0 63.9,61.44\"/></g></svg>\n      </div>}\n   </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}